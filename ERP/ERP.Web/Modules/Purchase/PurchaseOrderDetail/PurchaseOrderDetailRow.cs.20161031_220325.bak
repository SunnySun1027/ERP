

namespace ERP.Purchase.Entities
{
    using Newtonsoft.Json;
    using Serenity;
    using Serenity.ComponentModel;
    using Serenity.Data;
    using Serenity.Data.Mapping;
    using System;
    using System.ComponentModel;
    using System.IO;

    [ConnectionKey("Shoes"), DisplayName("PurchaseOrderDetails"), InstanceName("PurchaseOrderDetails"), TwoLevelCached]
    [ReadPermission("Administration")]
    [ModifyPermission("Administration")]
    public sealed class PurchaseOrderDetailRow : Row, IIdRow, INameRow
    {
        [DisplayName("Id"), Column("ID"), Identity]
        public Int32? Id
        {
            get { return Fields.Id[this]; }
            set { Fields.Id[this] = value; }
        }

        [DisplayName("Order"), Column("OrderID"), Size(14), PrimaryKey, ForeignKey("[dbo].[PurchaseOrders]", "OrderID"), LeftJoin("jOrder"), QuickSearch, TextualField("OrderDescription")]
        public String OrderId
        {
            get { return Fields.OrderId[this]; }
            set { Fields.OrderId[this] = value; }
        }

        [DisplayName("Product"), Column("ProductID"), PrimaryKey, ForeignKey("[dbo].[Products]", "ProductID"), LeftJoin("jProduct"), TextualField("ProductProductName")]
        public Int32? ProductId
        {
            get { return Fields.ProductId[this]; }
            set { Fields.ProductId[this] = value; }
        }

        [DisplayName("Color"), Column("ColorID"), PrimaryKey, ForeignKey("[dbo].[ProductColor]", "ColorID"), LeftJoin("jColor"), TextualField("ColorColorName")]
        public Int32? ColorId
        {
            get { return Fields.ColorId[this]; }
            set { Fields.ColorId[this] = value; }
        }

        [DisplayName("Size"), Column("SizeID"), PrimaryKey, ForeignKey("[dbo].[ProductSize]", "SizeID"), LeftJoin("jSize"), TextualField("SizeSizeName")]
        public Int32? SizeId
        {
            get { return Fields.SizeId[this]; }
            set { Fields.SizeId[this] = value; }
        }

        [DisplayName("Quantity")]
        public Int32? Quantity
        {
            get { return Fields.Quantity[this]; }
            set { Fields.Quantity[this] = value; }
        }

        [DisplayName("Unit Price"), Size(19), Scale(4)]
        public Decimal? UnitPrice
        {
            get { return Fields.UnitPrice[this]; }
            set { Fields.UnitPrice[this] = value; }
        }

        [DisplayName("Description"), Size(1000)]
        public String Description
        {
            get { return Fields.Description[this]; }
            set { Fields.Description[this] = value; }
        }

        [DisplayName("Order Id"), Expression("jOrder.[ID]")]
        public Int32? OrderId
        {
            get { return Fields.OrderId[this]; }
            set { Fields.OrderId[this] = value; }
        }

        [DisplayName("Order Supplier Id"), Expression("jOrder.[SupplierID]")]
        public Int32? OrderSupplierId
        {
            get { return Fields.OrderSupplierId[this]; }
            set { Fields.OrderSupplierId[this] = value; }
        }

        [DisplayName("Order User Id"), Expression("jOrder.[UserID]")]
        public Int32? OrderUserId
        {
            get { return Fields.OrderUserId[this]; }
            set { Fields.OrderUserId[this] = value; }
        }

        [DisplayName("Order Create Date"), Expression("jOrder.[CreateDate]")]
        public DateTime? OrderCreateDate
        {
            get { return Fields.OrderCreateDate[this]; }
            set { Fields.OrderCreateDate[this] = value; }
        }

        [DisplayName("Order Description"), Expression("jOrder.[Description]")]
        public String OrderDescription
        {
            get { return Fields.OrderDescription[this]; }
            set { Fields.OrderDescription[this] = value; }
        }

        [DisplayName("Order State"), Expression("jOrder.[State]")]
        public Int16? OrderState
        {
            get { return Fields.OrderState[this]; }
            set { Fields.OrderState[this] = value; }
        }

        [DisplayName("Product Product Name"), Expression("jProduct.[ProductName]")]
        public String ProductProductName
        {
            get { return Fields.ProductProductName[this]; }
            set { Fields.ProductProductName[this] = value; }
        }

        [DisplayName("Product Supplier Id"), Expression("jProduct.[SupplierID]")]
        public Int32? ProductSupplierId
        {
            get { return Fields.ProductSupplierId[this]; }
            set { Fields.ProductSupplierId[this] = value; }
        }

        [DisplayName("Product Category Id"), Expression("jProduct.[CategoryID]")]
        public Int32? ProductCategoryId
        {
            get { return Fields.ProductCategoryId[this]; }
            set { Fields.ProductCategoryId[this] = value; }
        }

        [DisplayName("Product Quantity Per Unit"), Expression("jProduct.[QuantityPerUnit]")]
        public String ProductQuantityPerUnit
        {
            get { return Fields.ProductQuantityPerUnit[this]; }
            set { Fields.ProductQuantityPerUnit[this] = value; }
        }

        [DisplayName("Product Unit Price"), Expression("jProduct.[UnitPrice]")]
        public Decimal? ProductUnitPrice
        {
            get { return Fields.ProductUnitPrice[this]; }
            set { Fields.ProductUnitPrice[this] = value; }
        }

        [DisplayName("Product Units In Stock"), Expression("jProduct.[UnitsInStock]")]
        public Int16? ProductUnitsInStock
        {
            get { return Fields.ProductUnitsInStock[this]; }
            set { Fields.ProductUnitsInStock[this] = value; }
        }

        [DisplayName("Product Units On Order"), Expression("jProduct.[UnitsOnOrder]")]
        public Int16? ProductUnitsOnOrder
        {
            get { return Fields.ProductUnitsOnOrder[this]; }
            set { Fields.ProductUnitsOnOrder[this] = value; }
        }

        [DisplayName("Product Reorder Level"), Expression("jProduct.[ReorderLevel]")]
        public Int16? ProductReorderLevel
        {
            get { return Fields.ProductReorderLevel[this]; }
            set { Fields.ProductReorderLevel[this] = value; }
        }

        [DisplayName("Product Discontinued"), Expression("jProduct.[Discontinued]")]
        public Boolean? ProductDiscontinued
        {
            get { return Fields.ProductDiscontinued[this]; }
            set { Fields.ProductDiscontinued[this] = value; }
        }

        [DisplayName("Product Product Image"), Expression("jProduct.[ProductImage]")]
        public String ProductProductImage
        {
            get { return Fields.ProductProductImage[this]; }
            set { Fields.ProductProductImage[this] = value; }
        }

        [DisplayName("Color Color Name"), Expression("jColor.[ColorName]")]
        public String ColorColorName
        {
            get { return Fields.ColorColorName[this]; }
            set { Fields.ColorColorName[this] = value; }
        }

        [DisplayName("Color Color Group Id"), Expression("jColor.[ColorGroupID]")]
        public Int32? ColorColorGroupId
        {
            get { return Fields.ColorColorGroupId[this]; }
            set { Fields.ColorColorGroupId[this] = value; }
        }

        [DisplayName("Size Size Name"), Expression("jSize.[SizeName]")]
        public String SizeSizeName
        {
            get { return Fields.SizeSizeName[this]; }
            set { Fields.SizeSizeName[this] = value; }
        }

        [DisplayName("Size Size Group Id"), Expression("jSize.[SizeGroupID]")]
        public Int32? SizeSizeGroupId
        {
            get { return Fields.SizeSizeGroupId[this]; }
            set { Fields.SizeSizeGroupId[this] = value; }
        }

        IIdField IIdRow.IdField
        {
            get { return Fields.Id; }
        }

        StringField INameRow.NameField
        {
            get { return Fields.OrderId; }
        }

        public static readonly RowFields Fields = new RowFields().Init();

        public PurchaseOrderDetailRow()
            : base(Fields)
        {
        }

        public class RowFields : RowFieldsBase
        {
            public Int32Field Id;
            public StringField OrderId;
            public Int32Field ProductId;
            public Int32Field ColorId;
            public Int32Field SizeId;
            public Int32Field Quantity;
            public DecimalField UnitPrice;
            public StringField Description;

            public Int32Field OrderId;
            public Int32Field OrderSupplierId;
            public Int32Field OrderUserId;
            public DateTimeField OrderCreateDate;
            public StringField OrderDescription;
            public Int16Field OrderState;

            public StringField ProductProductName;
            public Int32Field ProductSupplierId;
            public Int32Field ProductCategoryId;
            public StringField ProductQuantityPerUnit;
            public DecimalField ProductUnitPrice;
            public Int16Field ProductUnitsInStock;
            public Int16Field ProductUnitsOnOrder;
            public Int16Field ProductReorderLevel;
            public BooleanField ProductDiscontinued;
            public StringField ProductProductImage;

            public StringField ColorColorName;
            public Int32Field ColorColorGroupId;

            public StringField SizeSizeName;
            public Int32Field SizeSizeGroupId;

            public RowFields()
                : base("[dbo].[PurchaseOrderDetails]")
            {
                LocalTextPrefix = "Purchase.PurchaseOrderDetail";
            }
        }
    }
}